abstract Enum

//enum Security
abstract Security : Enum -> integer
NoSecurity: Security = 0
Broken: Security = 1
Weak: Security = 2
Medium: Security = 3
Strong: Security = 4

//enum Performance
abstract Performance : Enum -> integer
VerySlow: Performance = 1
Slow: Performance = 2
Fast: Performance = 3
VeryFast: Performance = 4

abstract Algorithm
	name -> string
	description -> string
	security -> Security
	performance -> Performance

abstract KeyDerivationAlgorithm : Algorithm
	iterations -> integer
	outputSize -> integer
	digest -> Digest?
	//security depends on underlying digest security
	[digest => security.ref = digest.security.ref]
	[outputSize = 128 || outputSize = 192 || outputSize = 256]//fix popular outputSize else all values upto maxInt will be allowed
	[digest.security.ref != Broken]
	[iterations = 1000]//1000 is the accepted minimum default number of iterations for a slow enough computation

abstract Task
    description -> string
    
abstract Digest : Algorithm
    outputSize -> integer

DigestAlgorithms
	md5: Digest
		[name = "MD5"]
		[description = "MD5 digest"]
		[performance = VeryFast]
		[security = Broken]
		[outputSize = 128]

	sha_1: Digest
		[name = "SHA-1"]
		[description = "SHA-1 digest"]
		[performance = VeryFast]
		[security = Weak]
		[outputSize = 160]
	
	sha_128: Digest
		[name = "SHA-128"]
		[description = "SHA-128 digest"]
		[outputSize = 128 ]
		[security = Medium]
		[performance = Slow]	

//	sha_256: Digest
//		[name = "SHA-256"]
//		[description = "SHA-256 digest"]
//		[outputSize = 256 ]
//		[security = Strong]
//		[performance = Slow]	

KeyDerivationAlgorithms
	pbkdf2 : KeyDerivationAlgorithm
		[name = "PBKDF2"]
		[description = "PBKDF2 key derivation"]
		[digest]
		[performance = Slow]

//	scrypt: KeyDerivationAlgorithm
//		[name = "scrypt"]
//		[description = "Scrypt password-based key derivation"]
//		[no digest]
//		[performance = VerySlow]
//		[security = Strong]	

//	bcrypt: KeyDerivationAlgorithm
//		[name = "bcrypt"]
//		[description = "Bcrypt password-based key derivation"]
//		[performance = Slow]
//		[no digest]
//		[outputSize = 192]
//		[security = Medium]

SecurePassword : Task
	[description = "Represent password in a secure way for storage"]
	kda -> KeyDerivationAlgorithm
	
