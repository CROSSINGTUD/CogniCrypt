scope({c0_AddingDocuments:2, c0_Enum:10, c0_List:4, c0_NumberDocuments:2, c0_TrustedAuthorities:2});
defaultScope(1);
intRange(-8, 7);
stringLength(21);

c0_Enum = Abstract("c0_Enum");
c0_List = Abstract("c0_List");
c0_Skip_List = Clafer("c0_Skip_List").withCard(1, 1);
c0_Simple_List = Clafer("c0_Simple_List").withCard(1, 1);
c0_Merkle_Tree_Sequence = Clafer("c0_Merkle_Tree_Sequence").withCard(1, 1);
c0_Notarial_Attestation_Wrapper = Clafer("c0_Notarial_Attestation_Wrapper").withCard(1, 1);
c0_AddingDocuments = Abstract("c0_AddingDocuments");
c0_Once = Clafer("c0_Once").withCard(1, 1);
c0_MultipleTimes = Clafer("c0_MultipleTimes").withCard(1, 1);
c0_NumberDocuments = Abstract("c0_NumberDocuments");
c0_Single = Clafer("c0_Single").withCard(1, 1);
c0_MultipleDocuments = Clafer("c0_MultipleDocuments").withCard(1, 1);
c0_TrustedAuthorities = Abstract("c0_TrustedAuthorities");
c0_SignatureBased = Clafer("c0_SignatureBased").withCard(1, 1);
c0_Notaries = Clafer("c0_Notaries").withCard(1, 1);
c0_Task = Abstract("c0_Task");
c0_description = c0_Task.addChild("c0_description").withCard(1, 1);
c0_LongTermArchiving = Clafer("c0_LongTermArchiving").withCard(1, 1);
c0_list = c0_LongTermArchiving.addChild("c0_list").withCard(1, 1);
c0_addDoc = c0_LongTermArchiving.addChild("c0_addDoc").withCard(1, 1);
c0_numDoc = c0_LongTermArchiving.addChild("c0_numDoc").withCard(1, 1);
c0_trust = c0_LongTermArchiving.addChild("c0_trust").withCard(0, 1);
c0_List.extending(c0_Enum);
c0_Skip_List.extending(c0_List);
c0_Simple_List.extending(c0_List);
c0_Merkle_Tree_Sequence.extending(c0_List);
c0_Notarial_Attestation_Wrapper.extending(c0_List);
c0_AddingDocuments.extending(c0_Enum);
c0_Once.extending(c0_AddingDocuments);
c0_MultipleTimes.extending(c0_AddingDocuments);
c0_NumberDocuments.extending(c0_Enum);
c0_Single.extending(c0_NumberDocuments);
c0_MultipleDocuments.extending(c0_NumberDocuments);
c0_TrustedAuthorities.extending(c0_Enum);
c0_SignatureBased.extending(c0_TrustedAuthorities);
c0_Notaries.extending(c0_TrustedAuthorities);
c0_description.refTo(string);
c0_LongTermArchiving.extending(c0_Task);
c0_LongTermArchiving.addConstraint(equal(joinRef(join($this(), c0_description)), constant("\"Archiving Documents\"")));
c0_list.refTo(c0_List);
c0_addDoc.refTo(c0_AddingDocuments);
c0_numDoc.refTo(c0_NumberDocuments);
c0_trust.refTo(c0_TrustedAuthorities);
c0_LongTermArchiving.addConstraint(implies(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_MultipleDocuments)), equal(joinRef(join($this(), c0_addDoc)), global(c0_MultipleTimes))), equal(joinRef(join($this(), c0_list)), global(c0_Skip_List))));
c0_LongTermArchiving.addConstraint(implies(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_MultipleDocuments)), equal(joinRef(join($this(), c0_addDoc)), global(c0_Once))), equal(joinRef(join($this(), c0_list)), global(c0_Merkle_Tree_Sequence))));
c0_LongTermArchiving.addConstraint(implies(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_Single)), equal(joinRef(join($this(), c0_addDoc)), global(c0_MultipleTimes))), equal(joinRef(join($this(), c0_list)), global(c0_Skip_List))));
c0_LongTermArchiving.addConstraint(implies(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_Single)), equal(joinRef(join($this(), c0_addDoc)), global(c0_Once))), equal(joinRef(join($this(), c0_list)), global(c0_Skip_List))));
c0_LongTermArchiving.addConstraint(implies(and(and(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_Single)), equal(joinRef(join($this(), c0_addDoc)), global(c0_Once))), equal(joinRef(join($this(), c0_trust)), global(c0_SignatureBased))), notEqual(joinRef(join($this(), c0_trust)), global(c0_Notaries))), equal(joinRef(join($this(), c0_list)), global(c0_Simple_List))));
c0_LongTermArchiving.addConstraint(implies(and(and(equal(joinRef(join($this(), c0_numDoc)), global(c0_Single)), equal(joinRef(join($this(), c0_addDoc)), global(c0_Once))), equal(joinRef(join($this(), c0_trust)), global(c0_Notaries))), equal(joinRef(join($this(), c0_list)), global(c0_Notarial_Attestation_Wrapper))));
