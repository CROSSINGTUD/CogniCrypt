scope({c0_BMW_F:2, c0_CAR:4, c0_Enum:4, c0_Power:4, c0_TESLA:2, c0_class:2, c0_power:2, c0_power1:2}); defaultScope(1); intRange(-8, 7); stringLength(16); c0_Enum = Abstract("c0_Enum"); c0_CAR = Abstract("c0_CAR"); c0_name = Clafer("c0_name").withCard(1, 1); c0_performance = Clafer("c0_performance").withCard(1, 1); c0_BMW_F = Abstract("c0_BMW_F"); c0_class = c0_BMW_F.addChild("c0_class").withCard(1, 1); c0_power1 = c0_BMW_F.addChild("c0_power1").withCard(1, 1); c0_TESLA = Abstract("c0_TESLA"); c0_power = c0_TESLA.addChild("c0_power").withCard(1, 1); c0_Task = Abstract("c0_Task"); c0_description = c0_Task.addChild("c0_description").withCard(1, 1); c0_Power = Abstract("c0_Power"); c0_best = c0_Power.addChild("c0_best").withCard(1, 1); c0_better = c0_Power.addChild("c0_better").withCard(1, 1); c0_good = c0_Power.addChild("c0_good").withCard(1, 1); c0_poor = c0_Power.addChild("c0_poor").withCard(1, 1); c0_BMWCars = Clafer("c0_BMWCars").withCard(1, 1); c0_F30 = c0_BMWCars.addChild("c0_F30").withCard(1, 1); c0_F87 = c0_BMWCars.addChild("c0_F87").withCard(1, 1); c0_TeslaCars = Clafer("c0_TeslaCars").withCard(1, 1); c0_ModelS = c0_TeslaCars.addChild("c0_ModelS").withCard(1, 1); c0_Model3 = Clafer("c0_Model3").withCard(1, 1); c0_CarFinder = Clafer("c0_CarFinder").withCard(1, 1); c0_optionPetrol = c0_CarFinder.addChild("c0_optionPetrol").withCard(1, 1); c0_optionElectric = c0_CarFinder.addChild("c0_optionElectric").withCard(1, 1); c0_name.refTo(string); c0_performance.refTo(Int); c0_BMW_F.extending(c0_CAR); c0_class.refTo(Int); c0_power1.refTo(c0_Power); c0_TESLA.extending(c0_CAR); c0_power.refTo(c0_Power); c0_description.refTo(string); c0_Power.extending(c0_Enum).refTo(Int); c0_best.extending(c0_Power); c0_Power.addConstraint(implies(some(join($this(), c0_best)), equal(joinRef(join($this(), c0_best)), constant(1)))); c0_better.extending(c0_Power); c0_Power.addConstraint(implies(some(join($this(), c0_better)), equal(joinRef(join($this(), c0_better)), constant(2)))); c0_good.extending(c0_Power); c0_Power.addConstraint(implies(some(join($this(), c0_good)), equal(joinRef(join($this(), c0_good)), constant(3)))); c0_poor.extending(c0_Power); c0_Power.addConstraint(implies(some(join($this(), c0_poor)), equal(joinRef(join($this(), c0_poor)), constant(4)))); c0_F30.extending(c0_BMW_F); c0_F30.addConstraint(equal(joinRef(global(c0_name)), constant("\"BMW F30\""))); c0_F30.addConstraint(equal(joinRef(join($this(), c0_class)), constant(4))); c0_F30.addConstraint(equal(joinRef(joinRef(join($this(), c0_power1))), constant(3))); c0_F87.extending(c0_BMW_F); c0_F87.addConstraint(equal(joinRef(global(c0_name)), constant("\"BMW F87\""))); c0_F87.addConstraint(equal(joinRef(global(c0_performance)), constant(1))); c0_F87.addConstraint(equal(joinRef(join($this(), c0_class)), constant(2))); c0_F87.addConstraint(equal(joinRef(joinRef(join($this(), c0_power1))), constant(1))); c0_ModelS.extending(c0_TESLA); c0_ModelS.addConstraint(equal(joinRef(global(c0_name)), constant("\"Model S\""))); c0_ModelS.addConstraint(equal(joinRef(global(c0_performance)), constant(2))); c0_ModelS.addConstraint(equal(joinRef(joinRef(join($this(), c0_power))), constant(3))); c0_Model3.extending(c0_TESLA); c0_Model3.addConstraint(equal(joinRef(global(c0_name)), constant("\"Model 3\""))); c0_Model3.addConstraint(equal(joinRef(global(c0_performance)), constant(3))); c0_Model3.addConstraint(equal(joinRef(joinRef(join($this(), c0_power))), constant(1))); c0_CarFinder.extending(c0_Task); c0_CarFinder.addConstraint(equal(joinRef(join($this(), c0_description)), constant("\"Find car\""))); c0_optionPetrol.refTo(c0_BMWCars); c0_optionPetrol.addConstraint(lessThan(joinRef(joinRef(join(global(c0_BMW_F), c0_power1))), constant(3))); c0_optionElectric.refTo(c0_TeslaCars); 